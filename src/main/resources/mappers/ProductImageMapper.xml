<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyuan.web.dao.ProductImageMapper">
  <resultMap id="BaseResultMap" type="com.qiyuan.web.entity.ProductImage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="filename" jdbcType="NVARCHAR" property="filename" />
    <result column="sort" jdbcType="SMALLINT" property="sort" />
    <result column="description" jdbcType="NVARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, type, filename, sort, description, create_time, update_time
  </sql>
  <select id="selectMaxSortByProductId" parameterType="integer" resultType="short">
    SELECT MAX(sort) FROM product_image WHERE product_id = #{productId} AND type = 'gallery'
  </select>
  <select id="selectByExample" parameterType="com.qiyuan.web.entity.example.ProductImageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByProductIdAndType" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from product_image
    WHERE product_id = #{productId} AND type = #{type}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_image
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product_image
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByProductIdAndTypeAndFilename">
    delete from product_image
    where product_id = #{productId}
      and type = #{type}
      and filename = #{filename}
  </delete>



  <delete id="deleteByProductIdAndType">
    DELETE FROM product_image
    WHERE product_id = #{productId} AND type = #{type}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiyuan.web.entity.example.ProductImageExample">
    delete from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByProductId" parameterType="java.lang.Integer">
    delete from product_image
    WHERE product_id = #{product_id}
  </delete>
  <insert id="insert" parameterType="com.qiyuan.web.entity.ProductImage" >
    insert into product_image (id, product_id, type, 
      filename, sort, description, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{productId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR},
      #{filename,jdbcType=NVARCHAR}, #{sort,jdbcType=SMALLINT}, #{description,jdbcType=NVARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyuan.web.entity.ProductImage" useGeneratedKeys="true" keyProperty="id">
    insert into product_image
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="filename != null">
        filename,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=NVARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=SMALLINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=NVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiyuan.web.entity.example.ProductImageExample" resultType="java.lang.Long">
    select count(*) from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_image
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.filename != null">
        filename = #{record.filename,jdbcType=NVARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=SMALLINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=NVARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateSortById">
    UPDATE product_image SET sort = #{sort} WHERE id = #{id}
  </update>
  <update id="updateByExample" parameterType="map">
    update product_image
    set id = #{record.id,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      filename = #{record.filename,jdbcType=NVARCHAR},
      sort = #{record.sort,jdbcType=SMALLINT},
      description = #{record.description,jdbcType=NVARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyuan.web.entity.ProductImage">
    update product_image
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        filename = #{filename,jdbcType=NVARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=SMALLINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=NVARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyuan.web.entity.ProductImage">
    update product_image
    set product_id = #{productId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=NVARCHAR},
      sort = #{sort,jdbcType=SMALLINT},
      description = #{description,jdbcType=NVARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>