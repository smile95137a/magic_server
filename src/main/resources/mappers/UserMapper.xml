<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyuan.web.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.qiyuan.web.entity.User">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="nickname" jdbcType="NVARCHAR" property="nickname" />
    <result column="line_id" jdbcType="VARCHAR" property="lineId" />
    <result column="address_name" jdbcType="NVARCHAR" property="addressName" />
    <result column="address" jdbcType="NVARCHAR" property="address" />
    <result column="receipt_type" jdbcType="VARCHAR" property="receiptType" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="oauth_type" jdbcType="VARCHAR" property="oauthType" />
    <result column="oauth_id" jdbcType="VARCHAR" property="oauthId" />
    <result column="city" jdbcType="NVARCHAR" property="city" />
    <result column="district" jdbcType="NVARCHAR" property="district" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, password, email, phone, nickname, line_id, address_name, address, receipt_type, 
    username, oauth_type, oauth_id, city, district
  </sql>
  <select id="selectByExample" parameterType="com.qiyuan.web.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiyuan.web.entity.UserExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiyuan.web.entity.User">
    insert into users (id, password, email,
                       phone, nickname, line_id,
                       address_name, address, receipt_type,
                       username, oauth_type, oauth_id,
                       city, district)
    values (#{id,jdbcType=CHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
            #{phone,jdbcType=VARCHAR}, #{nickname,jdbcType=NVARCHAR}, #{lineId,jdbcType=VARCHAR},
            #{addressName,jdbcType=NVARCHAR}, #{address,jdbcType=NVARCHAR}, #{receiptType,jdbcType=VARCHAR},
            #{username,jdbcType=VARCHAR}, #{oauthType,jdbcType=VARCHAR}, #{oauthId,jdbcType=VARCHAR},
            #{city,jdbcType=NVARCHAR}, #{district,jdbcType=NVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyuan.web.entity.User">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="lineId != null">
        line_id,
      </if>
      <if test="addressName != null">
        address_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="receiptType != null">
        receipt_type,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="oauthType != null">
        oauth_type,
      </if>
      <if test="oauthId != null">
        oauth_id,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="district != null">
        district,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=NVARCHAR},
      </if>
      <if test="lineId != null">
        #{lineId,jdbcType=VARCHAR},
      </if>
      <if test="addressName != null">
        #{addressName,jdbcType=NVARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=NVARCHAR},
      </if>
      <if test="receiptType != null">
        #{receiptType,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="oauthType != null">
        #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="oauthId != null">
        #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=NVARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiyuan.web.entity.UserExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=CHAR},
      </if>
      <if test="row.password != null">
        password = #{row.password,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.phone != null">
        phone = #{row.phone,jdbcType=VARCHAR},
      </if>
      <if test="row.nickname != null">
        nickname = #{row.nickname,jdbcType=NVARCHAR},
      </if>
      <if test="row.lineId != null">
        line_id = #{row.lineId,jdbcType=VARCHAR},
      </if>
      <if test="row.addressName != null">
        address_name = #{row.addressName,jdbcType=NVARCHAR},
      </if>
      <if test="row.address != null">
        address = #{row.address,jdbcType=NVARCHAR},
      </if>
      <if test="row.receiptType != null">
        receipt_type = #{row.receiptType,jdbcType=VARCHAR},
      </if>
      <if test="row.username != null">
        username = #{row.username,jdbcType=VARCHAR},
      </if>
      <if test="row.oauthType != null">
        oauth_type = #{row.oauthType,jdbcType=VARCHAR},
      </if>
      <if test="row.oauthId != null">
        oauth_id = #{row.oauthId,jdbcType=VARCHAR},
      </if>
      <if test="row.city != null">
        city = #{row.city,jdbcType=NVARCHAR},
      </if>
      <if test="row.district != null">
        district = #{row.district,jdbcType=NVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{row.id,jdbcType=CHAR},
    password = #{row.password,jdbcType=VARCHAR},
    email = #{row.email,jdbcType=VARCHAR},
    phone = #{row.phone,jdbcType=VARCHAR},
    nickname = #{row.nickname,jdbcType=NVARCHAR},
    line_id = #{row.lineId,jdbcType=VARCHAR},
    address_name = #{row.addressName,jdbcType=NVARCHAR},
    address = #{row.address,jdbcType=NVARCHAR},
    receipt_type = #{row.receiptType,jdbcType=VARCHAR},
    username = #{row.username,jdbcType=VARCHAR},
    oauth_type = #{row.oauthType,jdbcType=VARCHAR},
    oauth_id = #{row.oauthId,jdbcType=VARCHAR},
    city = #{row.city,jdbcType=NVARCHAR},
    district = #{row.district,jdbcType=NVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyuan.web.entity.User">
    update users
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=NVARCHAR},
      </if>
      <if test="lineId != null">
        line_id = #{lineId,jdbcType=VARCHAR},
      </if>
      <if test="addressName != null">
        address_name = #{addressName,jdbcType=NVARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=NVARCHAR},
      </if>
      <if test="receiptType != null">
        receipt_type = #{receiptType,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="oauthType != null">
        oauth_type = #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="oauthId != null">
        oauth_id = #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=NVARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=NVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyuan.web.entity.User">
    update users
    set password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        nickname = #{nickname,jdbcType=NVARCHAR},
        line_id = #{lineId,jdbcType=VARCHAR},
        address_name = #{addressName,jdbcType=NVARCHAR},
        address = #{address,jdbcType=NVARCHAR},
        receipt_type = #{receiptType,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        oauth_type = #{oauthType,jdbcType=VARCHAR},
        oauth_id = #{oauthId,jdbcType=VARCHAR},
        city = #{city,jdbcType=NVARCHAR},
        district = #{district,jdbcType=NVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>