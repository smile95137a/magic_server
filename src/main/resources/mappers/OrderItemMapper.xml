<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyuan.web.dao.OrderItemMapper">
  <resultMap id="BaseResultMap" type="com.qiyuan.web.entity.OrderItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="CHAR" property="orderId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_name" jdbcType="NVARCHAR" property="productName" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="special_price" jdbcType="DECIMAL" property="specialPrice" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="subtotal" jdbcType="DECIMAL" property="subtotal" />
    <result column="ext_json" jdbcType="NVARCHAR" property="extJson" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="spec_id" jdbcType="INTEGER" property="specId" />
    <result column="spec_value" jdbcType="NVARCHAR" property="specValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, product_id, product_name, unit_price, special_price, quantity, subtotal,
    ext_json, create_time, spec_id, spec_value
  </sql>
  <select id="selectByExample" parameterType="com.qiyuan.web.entity.example.OrderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiyuan.web.entity.example.OrderItemExample">
    delete from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiyuan.web.entity.OrderItem">
    insert into order_item (id, order_id, product_id,
                            product_name, unit_price, special_price,
                            quantity, subtotal, ext_json,
                            create_time, spec_id, spec_value
    )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=CHAR}, #{productId,jdbcType=INTEGER},
            #{productName,jdbcType=NVARCHAR}, #{unitPrice,jdbcType=DECIMAL}, #{specialPrice,jdbcType=DECIMAL},
            #{quantity,jdbcType=INTEGER}, #{subtotal,jdbcType=DECIMAL}, #{extJson,jdbcType=NVARCHAR},
            #{createTime,jdbcType=TIMESTAMP}, #{specId,jdbcType=INTEGER}, #{specValue,jdbcType=NVARCHAR}
           )
  </insert>
  <insert id="insertSelective" parameterType="com.qiyuan.web.entity.OrderItem">
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="specialPrice != null">
        special_price,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="subtotal != null">
        subtotal,
      </if>
      <if test="extJson != null">
        ext_json,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="specId != null">
        spec_id,
      </if>
      <if test="specValue != null">
        spec_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=NVARCHAR},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="specialPrice != null">
        #{specialPrice,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null">
        #{subtotal,jdbcType=DECIMAL},
      </if>
      <if test="extJson != null">
        #{extJson,jdbcType=NVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="specId != null">
        #{specId,jdbcType=INTEGER},
      </if>
      <if test="specValue != null">
        #{specValue,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiyuan.web.entity.example.OrderItemExample" resultType="java.lang.Long">
    select count(*) from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_item
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.orderId != null">
        order_id = #{row.orderId,jdbcType=CHAR},
      </if>
      <if test="row.productId != null">
        product_id = #{row.productId,jdbcType=INTEGER},
      </if>
      <if test="row.productName != null">
        product_name = #{row.productName,jdbcType=NVARCHAR},
      </if>
      <if test="row.unitPrice != null">
        unit_price = #{row.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="row.specialPrice != null">
        special_price = #{row.specialPrice,jdbcType=DECIMAL},
      </if>
      <if test="row.quantity != null">
        quantity = #{row.quantity,jdbcType=INTEGER},
      </if>
      <if test="row.subtotal != null">
        subtotal = #{row.subtotal,jdbcType=DECIMAL},
      </if>
      <if test="row.extJson != null">
        ext_json = #{row.extJson,jdbcType=NVARCHAR},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.specId != null">
        spec_id = #{row.specId,jdbcType=INTEGER},
      </if>
      <if test="row.specValue != null">
        spec_value = #{row.specValue,jdbcType=NVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_item
    set id = #{row.id,jdbcType=INTEGER},
    order_id = #{row.orderId,jdbcType=CHAR},
    product_id = #{row.productId,jdbcType=INTEGER},
    product_name = #{row.productName,jdbcType=NVARCHAR},
    unit_price = #{row.unitPrice,jdbcType=DECIMAL},
    special_price = #{row.specialPrice,jdbcType=DECIMAL},
    quantity = #{row.quantity,jdbcType=INTEGER},
    subtotal = #{row.subtotal,jdbcType=DECIMAL},
    ext_json = #{row.extJson,jdbcType=NVARCHAR},
    create_time = #{row.createTime,jdbcType=TIMESTAMP},
    spec_id = #{row.specId,jdbcType=INTEGER},
    spec_value = #{row.specValue,jdbcType=NVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyuan.web.entity.OrderItem">
    update order_item
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=CHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=NVARCHAR},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="specialPrice != null">
        special_price = #{specialPrice,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null">
        subtotal = #{subtotal,jdbcType=DECIMAL},
      </if>
      <if test="extJson != null">
        ext_json = #{extJson,jdbcType=NVARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="specId != null">
        spec_id = #{specId,jdbcType=INTEGER},
      </if>
      <if test="specValue != null">
        spec_value = #{specValue,jdbcType=NVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyuan.web.entity.OrderItem">
    update order_item
    set order_id = #{orderId,jdbcType=CHAR},
        product_id = #{productId,jdbcType=INTEGER},
        product_name = #{productName,jdbcType=NVARCHAR},
        unit_price = #{unitPrice,jdbcType=DECIMAL},
        special_price = #{specialPrice,jdbcType=DECIMAL},
        quantity = #{quantity,jdbcType=INTEGER},
        subtotal = #{subtotal,jdbcType=DECIMAL},
        ext_json = #{extJson,jdbcType=NVARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        spec_id = #{specId,jdbcType=INTEGER},
        spec_value = #{specValue,jdbcType=NVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>