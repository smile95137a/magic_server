<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyuan.web.dao.PoemMapper">
  <resultMap id="BaseResultMap" type="com.qiyuan.web.entity.Poem">
    <id column="sequence" jdbcType="NVARCHAR" property="sequence" />
    <result column="title" jdbcType="NVARCHAR" property="title" />
    <result column="zodiac" jdbcType="NVARCHAR" property="zodiac" />
    <result column="fortune" jdbcType="NVARCHAR" property="fortune" />
    <result column="poem" jdbcType="NVARCHAR" property="poem" />
    <result column="meaning" jdbcType="NVARCHAR" property="meaning" />
    <result column="dongponote" jdbcType="NVARCHAR" property="dongponote" />
    <result column="bixiannote" jdbcType="NVARCHAR" property="bixiannote" />
    <result column="explanation" jdbcType="NVARCHAR" property="explanation" />
    <result column="sort" jdbcType="TINYINT" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sequence, title, zodiac, fortune, poem, meaning, dongponote, bixiannote, explanation, 
    sort
  </sql>
  <select id="selectByExample" parameterType="com.qiyuan.web.entity.example.PoemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from poem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from poem
    where sequence = #{sequence,jdbcType=NVARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from poem
    where sequence = #{sequence,jdbcType=NVARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiyuan.web.entity.example.PoemExample">
    delete from poem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiyuan.web.entity.Poem">
    insert into poem (sequence, title, zodiac, 
      fortune, poem, meaning, 
      dongponote, bixiannote, explanation, 
      sort)
    values (#{sequence,jdbcType=NVARCHAR}, #{title,jdbcType=NVARCHAR}, #{zodiac,jdbcType=NVARCHAR}, 
      #{fortune,jdbcType=NVARCHAR}, #{poem,jdbcType=NVARCHAR}, #{meaning,jdbcType=NVARCHAR}, 
      #{dongponote,jdbcType=NVARCHAR}, #{bixiannote,jdbcType=NVARCHAR}, #{explanation,jdbcType=NVARCHAR}, 
      #{sort,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyuan.web.entity.Poem">
    insert into poem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sequence != null">
        sequence,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="zodiac != null">
        zodiac,
      </if>
      <if test="fortune != null">
        fortune,
      </if>
      <if test="poem != null">
        poem,
      </if>
      <if test="meaning != null">
        meaning,
      </if>
      <if test="dongponote != null">
        dongponote,
      </if>
      <if test="bixiannote != null">
        bixiannote,
      </if>
      <if test="explanation != null">
        explanation,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sequence != null">
        #{sequence,jdbcType=NVARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=NVARCHAR},
      </if>
      <if test="zodiac != null">
        #{zodiac,jdbcType=NVARCHAR},
      </if>
      <if test="fortune != null">
        #{fortune,jdbcType=NVARCHAR},
      </if>
      <if test="poem != null">
        #{poem,jdbcType=NVARCHAR},
      </if>
      <if test="meaning != null">
        #{meaning,jdbcType=NVARCHAR},
      </if>
      <if test="dongponote != null">
        #{dongponote,jdbcType=NVARCHAR},
      </if>
      <if test="bixiannote != null">
        #{bixiannote,jdbcType=NVARCHAR},
      </if>
      <if test="explanation != null">
        #{explanation,jdbcType=NVARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiyuan.web.entity.example.PoemExample" resultType="java.lang.Long">
    select count(*) from poem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update poem
    <set>
      <if test="record.sequence != null">
        sequence = #{record.sequence,jdbcType=NVARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=NVARCHAR},
      </if>
      <if test="record.zodiac != null">
        zodiac = #{record.zodiac,jdbcType=NVARCHAR},
      </if>
      <if test="record.fortune != null">
        fortune = #{record.fortune,jdbcType=NVARCHAR},
      </if>
      <if test="record.poem != null">
        poem = #{record.poem,jdbcType=NVARCHAR},
      </if>
      <if test="record.meaning != null">
        meaning = #{record.meaning,jdbcType=NVARCHAR},
      </if>
      <if test="record.dongponote != null">
        dongponote = #{record.dongponote,jdbcType=NVARCHAR},
      </if>
      <if test="record.bixiannote != null">
        bixiannote = #{record.bixiannote,jdbcType=NVARCHAR},
      </if>
      <if test="record.explanation != null">
        explanation = #{record.explanation,jdbcType=NVARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update poem
    set sequence = #{record.sequence,jdbcType=NVARCHAR},
      title = #{record.title,jdbcType=NVARCHAR},
      zodiac = #{record.zodiac,jdbcType=NVARCHAR},
      fortune = #{record.fortune,jdbcType=NVARCHAR},
      poem = #{record.poem,jdbcType=NVARCHAR},
      meaning = #{record.meaning,jdbcType=NVARCHAR},
      dongponote = #{record.dongponote,jdbcType=NVARCHAR},
      bixiannote = #{record.bixiannote,jdbcType=NVARCHAR},
      explanation = #{record.explanation,jdbcType=NVARCHAR},
      sort = #{record.sort,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyuan.web.entity.Poem">
    update poem
    <set>
      <if test="title != null">
        title = #{title,jdbcType=NVARCHAR},
      </if>
      <if test="zodiac != null">
        zodiac = #{zodiac,jdbcType=NVARCHAR},
      </if>
      <if test="fortune != null">
        fortune = #{fortune,jdbcType=NVARCHAR},
      </if>
      <if test="poem != null">
        poem = #{poem,jdbcType=NVARCHAR},
      </if>
      <if test="meaning != null">
        meaning = #{meaning,jdbcType=NVARCHAR},
      </if>
      <if test="dongponote != null">
        dongponote = #{dongponote,jdbcType=NVARCHAR},
      </if>
      <if test="bixiannote != null">
        bixiannote = #{bixiannote,jdbcType=NVARCHAR},
      </if>
      <if test="explanation != null">
        explanation = #{explanation,jdbcType=NVARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=TINYINT},
      </if>
    </set>
    where sequence = #{sequence,jdbcType=NVARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyuan.web.entity.Poem">
    update poem
    set title = #{title,jdbcType=NVARCHAR},
      zodiac = #{zodiac,jdbcType=NVARCHAR},
      fortune = #{fortune,jdbcType=NVARCHAR},
      poem = #{poem,jdbcType=NVARCHAR},
      meaning = #{meaning,jdbcType=NVARCHAR},
      dongponote = #{dongponote,jdbcType=NVARCHAR},
      bixiannote = #{bixiannote,jdbcType=NVARCHAR},
      explanation = #{explanation,jdbcType=NVARCHAR},
      sort = #{sort,jdbcType=TINYINT}
    where sequence = #{sequence,jdbcType=NVARCHAR}
  </update>
</mapper>